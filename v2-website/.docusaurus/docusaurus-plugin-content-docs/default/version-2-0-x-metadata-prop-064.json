{
  "pluginId": "default",
  "version": "2.0.x",
  "label": "2.0.x",
  "banner": "unmaintained",
  "badge": true,
  "className": "docs-version-2.0.x",
  "isLast": false,
  "docsSidebars": {},
  "docs": {
    "version-2.0.x-configuration": {
      "id": "version-2.0.x-configuration",
      "title": "Configuration",
      "description": "Configuration of rest-hapi is handled through the `RestHapi.config` object. See the introduction for an example.  Below is a description of the current configuration options/properties."
    },
    "version-2.0.x-creating-endpoints": {
      "id": "version-2.0.x-creating-endpoints",
      "title": "Creating Endpoints",
      "description": "Creating endpoints with rest-hapi can be accomplished three different ways:"
    },
    "version-2.0.x-introduction": {
      "id": "version-2.0.x-introduction",
      "title": "Introduction",
      "description": "Requirements"
    },
    "version-2.0.x-policies": {
      "id": "version-2.0.x-policies",
      "title": "Policies",
      "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme."
    },
    "version-2.0.x-querying": {
      "id": "version-2.0.x-querying",
      "title": "Querying",
      "description": "Query parameters can be added to GET requests to filter responses.  These parameters"
    },
    "version-2.0.x-quick-start": {
      "id": "version-2.0.x-quick-start",
      "title": "Quick Start",
      "description": "Requirements"
    },
    "version-2.0.x-validation": {
      "id": "version-2.0.x-validation",
      "title": "Validation",
      "description": "Route validation"
    }
  }
}