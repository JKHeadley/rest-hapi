{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": "unreleased",
          "badge": true,
          "className": "docs-version-current",
          "path": "/docs/next",
          "tagsPath": "/docs/next/tags",
          "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs",
          "editUrlLocalized": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": false,
          "sidebarFilePath": "/Users/justin/Documents/Projects/rest-hapi/website/sidebars.json",
          "contentPath": "/Users/justin/Documents/Projects/rest-hapi/docs",
          "contentPathLocalized": "/Users/justin/Documents/Projects/rest-hapi/v2-website/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "associations",
              "id": "associations",
              "title": "Associations",
              "description": "The rest-hapi framework supports model associations that mimic associations in a relational database.  This includes one-one, one-many, many-one, and many-many relationships.  Associations are created by adding the relevant schema fields and populating the `associations object within routeOptions.  Associations exists as references to a document's _id` field, and can be populated to return the associated object.  See Querying for more details on how to populate associations.",
              "source": "@site/../docs/associations.md",
              "sourceDirName": ".",
              "slug": "/associations",
              "permalink": "/docs/next/associations",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/associations.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "associations",
                "title": "Associations",
                "sidebar_label": "Assocations"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Creating Endpoints",
                "permalink": "/docs/next/creating-endpoints"
              },
              "next": {
                "title": "Route Customization",
                "permalink": "/docs/next/route-customization"
              }
            },
            {
              "unversionedId": "audit-logs",
              "id": "audit-logs",
              "title": "Audit Logs",
              "description": "By default, rest-hapi records all document-modifiying activities that occur within the generated endpoints. Each event is stored as a document within the auditLog collection.  The audit log documents can be set to expire by providing a value for config.auditLogTTL.  The value can be specified in integer seconds or as a human-readable time period (Ex",
              "source": "@site/../docs/audit-logs.md",
              "sourceDirName": ".",
              "slug": "/audit-logs",
              "permalink": "/docs/next/audit-logs",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/audit-logs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "audit-logs",
                "title": "Audit Logs",
                "sidebar_label": "Audit Logs"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Authorization",
                "permalink": "/docs/next/authorization"
              },
              "next": {
                "title": "Policies",
                "permalink": "/docs/next/policies"
              }
            },
            {
              "unversionedId": "authentication",
              "id": "authentication",
              "title": "Authentication",
              "description": "Route authentication",
              "source": "@site/../docs/authentication.md",
              "sourceDirName": ".",
              "slug": "/authentication",
              "permalink": "/docs/next/authentication",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/authentication.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "authentication",
                "title": "Authentication",
                "sidebar_label": "Authentication"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Middleware",
                "permalink": "/docs/next/middleware"
              },
              "next": {
                "title": "Authorization",
                "permalink": "/docs/next/authorization"
              }
            },
            {
              "unversionedId": "authorization",
              "id": "authorization",
              "title": "Authorization",
              "description": "Route authorization",
              "source": "@site/../docs/authorization.md",
              "sourceDirName": ".",
              "slug": "/authorization",
              "permalink": "/docs/next/authorization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/authorization.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "authorization",
                "title": "Authorization",
                "sidebar_label": "Authorization"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Authentication",
                "permalink": "/docs/next/authentication"
              },
              "next": {
                "title": "Audit Logs",
                "permalink": "/docs/next/audit-logs"
              }
            },
            {
              "unversionedId": "configuration",
              "id": "configuration",
              "title": "Configuration",
              "description": "Configuration of rest-hapi is handled through the `RestHapi.config` object. See the introduction for an example.  Below is a description of the current configuration options/properties.",
              "source": "@site/../docs/configuration.md",
              "sourceDirName": ".",
              "slug": "/configuration",
              "permalink": "/docs/next/configuration",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/configuration.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "configuration",
                "title": "Configuration",
                "sidebar_label": "Configuration"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Swagger Documentation",
                "permalink": "/docs/next/swagger-documentation"
              },
              "next": {
                "title": "Creating Endpoints",
                "permalink": "/docs/next/creating-endpoints"
              }
            },
            {
              "unversionedId": "creating-endpoints",
              "id": "creating-endpoints",
              "title": "Creating Endpoints",
              "description": "Creating endpoints with rest-hapi can be accomplished three different ways:",
              "source": "@site/../docs/creating-endpoints.md",
              "sourceDirName": ".",
              "slug": "/creating-endpoints",
              "permalink": "/docs/next/creating-endpoints",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/creating-endpoints.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "creating-endpoints",
                "title": "Creating Endpoints",
                "sidebar_label": "Creating Endpoints"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Configuration",
                "permalink": "/docs/next/configuration"
              },
              "next": {
                "title": "Assocations",
                "permalink": "/docs/next/associations"
              }
            },
            {
              "unversionedId": "duplicate-fields",
              "id": "duplicate-fields",
              "title": "Duplicate Fields",
              "description": "\"Duplicate fields\" is a rest-hapi feature that allows fields from an associated document to exist in the parent document while maintaining the original field value. This can be accomplished by setting config.enableDuplicateFields to true and adding the duplicate property to an association definition.",
              "source": "@site/../docs/duplicate-fields.md",
              "sourceDirName": ".",
              "slug": "/duplicate-fields",
              "permalink": "/docs/next/duplicate-fields",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/duplicate-fields.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "duplicate-fields",
                "title": "Duplicate Fields",
                "sidebar_label": "Duplicate Fields"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Querying",
                "permalink": "/docs/next/querying"
              },
              "next": {
                "title": "Validation",
                "permalink": "/docs/next/validation"
              }
            },
            {
              "unversionedId": "introduction",
              "id": "introduction",
              "title": "Introduction",
              "description": "Requirements",
              "source": "@site/../docs/introduction.md",
              "sourceDirName": ".",
              "slug": "/introduction",
              "permalink": "/docs/next/introduction",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/introduction.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "introduction",
                "title": "Introduction",
                "sidebar_label": "Introduction"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Quick Start",
                "permalink": "/docs/next/quick-start"
              },
              "next": {
                "title": "Swagger Documentation",
                "permalink": "/docs/next/swagger-documentation"
              }
            },
            {
              "unversionedId": "metadata",
              "id": "metadata",
              "title": "Metadata",
              "description": "Timestamps",
              "source": "@site/../docs/metadata.md",
              "sourceDirName": ".",
              "slug": "/metadata",
              "permalink": "/docs/next/metadata",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/metadata.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "metadata",
                "title": "Metadata",
                "sidebar_label": "Metadata"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Soft Delete",
                "permalink": "/docs/next/soft-delete"
              },
              "next": {
                "title": "Model Generation",
                "permalink": "/docs/next/model-generation"
              }
            },
            {
              "unversionedId": "middleware",
              "id": "middleware",
              "title": "Middleware",
              "description": "CRUD",
              "source": "@site/../docs/middleware.md",
              "sourceDirName": ".",
              "slug": "/middleware",
              "permalink": "/docs/next/middleware",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/middleware.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "middleware",
                "title": "Middleware",
                "sidebar_label": "Middleware"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Validation",
                "permalink": "/docs/next/validation"
              },
              "next": {
                "title": "Authentication",
                "permalink": "/docs/next/authentication"
              }
            },
            {
              "unversionedId": "misc",
              "id": "misc",
              "title": "Miscellaneous",
              "description": "Model generation",
              "source": "@site/../docs/misc.md",
              "sourceDirName": ".",
              "slug": "/misc",
              "permalink": "/docs/next/misc",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/misc.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "misc",
                "title": "Miscellaneous",
                "sidebar_label": "Miscellaneous"
              }
            },
            {
              "unversionedId": "model-generation",
              "id": "model-generation",
              "title": "Model Generation",
              "description": "In some situations models may be required before or without endpoint generation. For example some hapi plugins may require models to exist before the routes are registered. In these cases rest-hapi provides a `generateModels` function that can be called independently.",
              "source": "@site/../docs/model-generation.md",
              "sourceDirName": ".",
              "slug": "/model-generation",
              "permalink": "/docs/next/model-generation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/model-generation.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "model-generation",
                "title": "Model Generation",
                "sidebar_label": "Model Generation"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Metadata",
                "permalink": "/docs/next/metadata"
              },
              "next": {
                "title": "Testing",
                "permalink": "/docs/next/testing"
              }
            },
            {
              "unversionedId": "mongoose-wrapper-methods",
              "id": "mongoose-wrapper-methods",
              "title": "Mongoose Wrapper Methods",
              "description": "rest-hapi provides mongoose wrapper methods for the user to take advantage of in their server code. These methods provide several advantages including:",
              "source": "@site/../docs/mongoose-wrapper-methods.md",
              "sourceDirName": ".",
              "slug": "/mongoose-wrapper-methods",
              "permalink": "/docs/next/mongoose-wrapper-methods",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/mongoose-wrapper-methods.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "mongoose-wrapper-methods",
                "title": "Mongoose Wrapper Methods",
                "sidebar_label": "Mongoose Wrapper Methods"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Policies",
                "permalink": "/docs/next/policies"
              },
              "next": {
                "title": "Soft Delete",
                "permalink": "/docs/next/soft-delete"
              }
            },
            {
              "unversionedId": "policies",
              "id": "policies",
              "title": "Policies",
              "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme.",
              "source": "@site/../docs/policies.md",
              "sourceDirName": ".",
              "slug": "/policies",
              "permalink": "/docs/next/policies",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/policies.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "policies",
                "title": "Policies",
                "sidebar_label": "Policies"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Audit Logs",
                "permalink": "/docs/next/audit-logs"
              },
              "next": {
                "title": "Mongoose Wrapper Methods",
                "permalink": "/docs/next/mongoose-wrapper-methods"
              }
            },
            {
              "unversionedId": "querying",
              "id": "querying",
              "title": "Querying",
              "description": "Query parameters can be added to GET requests to filter responses.  These parameters",
              "source": "@site/../docs/querying.md",
              "sourceDirName": ".",
              "slug": "/querying",
              "permalink": "/docs/next/querying",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/querying.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "querying",
                "title": "Querying",
                "sidebar_label": "Querying"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Route Customization",
                "permalink": "/docs/next/route-customization"
              },
              "next": {
                "title": "Duplicate Fields",
                "permalink": "/docs/next/duplicate-fields"
              }
            },
            {
              "unversionedId": "questions",
              "id": "questions",
              "title": "Questions",
              "description": "If you have any questions/issues/feature requests, please feel free to open an issue.  We'd love to hear from you!",
              "source": "@site/../docs/questions.md",
              "sourceDirName": ".",
              "slug": "/questions",
              "permalink": "/docs/next/questions",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/questions.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "questions",
                "title": "Questions",
                "sidebar_label": "Questions"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Testing",
                "permalink": "/docs/next/testing"
              },
              "next": {
                "title": "Support",
                "permalink": "/docs/next/support"
              }
            },
            {
              "unversionedId": "quick-start",
              "id": "quick-start",
              "title": "Quick Start",
              "description": "Requirements",
              "source": "@site/../docs/quick-start.md",
              "sourceDirName": ".",
              "slug": "/quick-start",
              "permalink": "/docs/next/quick-start",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/quick-start.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "quick-start",
                "title": "Quick Start",
                "sidebar_label": "Quick Start"
              },
              "sidebar": "docs",
              "next": {
                "title": "Introduction",
                "permalink": "/docs/next/introduction"
              }
            },
            {
              "unversionedId": "route-customization",
              "id": "route-customization",
              "title": "Route Customization",
              "description": "Custom path names",
              "source": "@site/../docs/route-customization.md",
              "sourceDirName": ".",
              "slug": "/route-customization",
              "permalink": "/docs/next/route-customization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/route-customization.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "route-customization",
                "title": "Route Customization",
                "sidebar_label": "Route Customization"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Assocations",
                "permalink": "/docs/next/associations"
              },
              "next": {
                "title": "Querying",
                "permalink": "/docs/next/querying"
              }
            },
            {
              "unversionedId": "soft-delete",
              "id": "soft-delete",
              "title": "Soft Delete",
              "description": "rest-hapi supports soft delete functionality for documents.  When the config.enableSoftDelete property is set to `true, documents will gain an isDeleted property when they are created that will be set to false.  Whenever that document is deleted (via a rest-hapi endpoint or method), the document will remain in the collection, its isDeleted property will be set to true, and the deletedAt and deletedBy` properties (if enabled) will be populated.",
              "source": "@site/../docs/soft-delete.md",
              "sourceDirName": ".",
              "slug": "/soft-delete",
              "permalink": "/docs/next/soft-delete",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/soft-delete.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "soft-delete",
                "title": "Soft Delete",
                "sidebar_label": "Soft Delete"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Mongoose Wrapper Methods",
                "permalink": "/docs/next/mongoose-wrapper-methods"
              },
              "next": {
                "title": "Metadata",
                "permalink": "/docs/next/metadata"
              }
            },
            {
              "unversionedId": "support",
              "id": "support",
              "title": "Support",
              "description": "Like this project? Please star it!",
              "source": "@site/../docs/support.md",
              "sourceDirName": ".",
              "slug": "/support",
              "permalink": "/docs/next/support",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/support.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "support",
                "title": "Support",
                "sidebar_label": "Support"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Questions",
                "permalink": "/docs/next/questions"
              }
            },
            {
              "unversionedId": "swagger-documentation",
              "id": "swagger-documentation",
              "title": "Swagger Documentation",
              "description": "Swagger documentation (via hapi-swagger) is automatically generated for all endpoints and can be viewed by pointing a browser at the server URL. If you use the intro script this will be http8080/. The swagger docs provide quick access to testing your endpoints along with model schema descriptions and query options.",
              "source": "@site/../docs/swagger-documentation.md",
              "sourceDirName": ".",
              "slug": "/swagger-documentation",
              "permalink": "/docs/next/swagger-documentation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/swagger-documentation.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "swagger-documentation",
                "title": "Swagger Documentation",
                "sidebar_label": "Swagger Documentation"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/next/introduction"
              },
              "next": {
                "title": "Configuration",
                "permalink": "/docs/next/configuration"
              }
            },
            {
              "unversionedId": "testing",
              "id": "testing",
              "title": "Testing",
              "description": "If you have downloaded the source you can run the tests with:",
              "source": "@site/../docs/testing.md",
              "sourceDirName": ".",
              "slug": "/testing",
              "permalink": "/docs/next/testing",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/testing.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "testing",
                "title": "Testing",
                "sidebar_label": "Testing"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Model Generation",
                "permalink": "/docs/next/model-generation"
              },
              "next": {
                "title": "Questions",
                "permalink": "/docs/next/questions"
              }
            },
            {
              "unversionedId": "validation",
              "id": "validation",
              "title": "Validation",
              "description": "Route validation",
              "source": "@site/../docs/validation.md",
              "sourceDirName": ".",
              "slug": "/validation",
              "permalink": "/docs/next/validation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/../docs/validation.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "validation",
                "title": "Validation",
                "sidebar_label": "Validation"
              },
              "sidebar": "docs",
              "previous": {
                "title": "Duplicate Fields",
                "permalink": "/docs/next/duplicate-fields"
              },
              "next": {
                "title": "Middleware",
                "permalink": "/docs/next/middleware"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "docs": [
              {
                "type": "category",
                "label": "Getting Started",
                "items": [
                  {
                    "type": "doc",
                    "id": "quick-start"
                  },
                  {
                    "type": "doc",
                    "id": "introduction"
                  },
                  {
                    "type": "doc",
                    "id": "swagger-documentation"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Usage",
                "items": [
                  {
                    "type": "doc",
                    "id": "configuration"
                  },
                  {
                    "type": "doc",
                    "id": "creating-endpoints"
                  },
                  {
                    "type": "doc",
                    "id": "associations"
                  },
                  {
                    "type": "doc",
                    "id": "route-customization"
                  },
                  {
                    "type": "doc",
                    "id": "querying"
                  },
                  {
                    "type": "doc",
                    "id": "duplicate-fields"
                  },
                  {
                    "type": "doc",
                    "id": "validation"
                  },
                  {
                    "type": "doc",
                    "id": "middleware"
                  },
                  {
                    "type": "doc",
                    "id": "authentication"
                  },
                  {
                    "type": "doc",
                    "id": "authorization"
                  },
                  {
                    "type": "doc",
                    "id": "audit-logs"
                  },
                  {
                    "type": "doc",
                    "id": "policies"
                  },
                  {
                    "type": "doc",
                    "id": "mongoose-wrapper-methods"
                  },
                  {
                    "type": "doc",
                    "id": "soft-delete"
                  },
                  {
                    "type": "doc",
                    "id": "metadata"
                  },
                  {
                    "type": "doc",
                    "id": "model-generation"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Other",
                "items": [
                  {
                    "type": "doc",
                    "id": "testing"
                  },
                  {
                    "type": "doc",
                    "id": "questions"
                  },
                  {
                    "type": "doc",
                    "id": "support"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              }
            ]
          }
        },
        {
          "versionName": "2.3.x",
          "label": "2.3.x",
          "banner": null,
          "badge": true,
          "className": "docs-version-2.3.x",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x",
          "editUrlLocalized": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/i18n/en/docusaurus-plugin-content-docs/version-2.3.x",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_sidebars/version-2.3.x-sidebars.json",
          "contentPath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_docs/version-2.3.x",
          "contentPathLocalized": "/Users/justin/Documents/Projects/rest-hapi/v2-website/i18n/en/docusaurus-plugin-content-docs/version-2.3.x",
          "docs": [
            {
              "unversionedId": "associations",
              "id": "version-2.3.x/associations",
              "title": "Associations",
              "description": "The rest-hapi framework supports model associations that mimic associations in a relational database.  This includes one-one, one-many, many-one, and many-many relationships.  Associations are created by adding the relevant schema fields and populating the `associations object within routeOptions.  Associations exists as references to a document's _id` field, and can be populated to return the associated object.  See Querying for more details on how to populate associations.",
              "source": "@site/versioned_docs/version-2.3.x/associations.md",
              "sourceDirName": ".",
              "slug": "/associations",
              "permalink": "/docs/associations",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/associations.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "associations",
                "title": "Associations",
                "sidebar_label": "Assocations"
              }
            },
            {
              "unversionedId": "audit-logs",
              "id": "version-2.3.x/audit-logs",
              "title": "Audit Logs",
              "description": "By default, rest-hapi records all document-modifiying activities that occur within the generated endpoints. Each event is stored as a document within the auditLog collection.  The audit log documents can be set to expire by providing a value for config.auditLogTTL.  The value can be specified in integer seconds or as a human-readable time period (Ex",
              "source": "@site/versioned_docs/version-2.3.x/audit-logs.md",
              "sourceDirName": ".",
              "slug": "/audit-logs",
              "permalink": "/docs/audit-logs",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/audit-logs.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "audit-logs",
                "title": "Audit Logs",
                "sidebar_label": "Audit Logs"
              }
            },
            {
              "unversionedId": "authentication",
              "id": "version-2.3.x/authentication",
              "title": "Authentication",
              "description": "Route authentication",
              "source": "@site/versioned_docs/version-2.3.x/authentication.md",
              "sourceDirName": ".",
              "slug": "/authentication",
              "permalink": "/docs/authentication",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/authentication.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "authentication",
                "title": "Authentication",
                "sidebar_label": "Authentication"
              }
            },
            {
              "unversionedId": "authorization",
              "id": "version-2.3.x/authorization",
              "title": "Authorization",
              "description": "Route authorization",
              "source": "@site/versioned_docs/version-2.3.x/authorization.md",
              "sourceDirName": ".",
              "slug": "/authorization",
              "permalink": "/docs/authorization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/authorization.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "authorization",
                "title": "Authorization",
                "sidebar_label": "Authorization"
              }
            },
            {
              "unversionedId": "creating-endpoints",
              "id": "version-2.3.x/creating-endpoints",
              "title": "Creating Endpoints",
              "description": "Creating endpoints with rest-hapi can be accomplished three different ways:",
              "source": "@site/versioned_docs/version-2.3.x/creating-endpoints.md",
              "sourceDirName": ".",
              "slug": "/creating-endpoints",
              "permalink": "/docs/creating-endpoints",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/creating-endpoints.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "creating-endpoints",
                "title": "Creating Endpoints",
                "sidebar_label": "Creating Endpoints"
              }
            },
            {
              "unversionedId": "duplicate-fields",
              "id": "version-2.3.x/duplicate-fields",
              "title": "Duplicate Fields",
              "description": "\"Duplicate fields\" is a rest-hapi feature that allows fields from an associated document to exist in the parent document while maintaining the original field value. This can be accomplished by setting config.enableDuplicateFields to true and adding the duplicate property to an association definition.",
              "source": "@site/versioned_docs/version-2.3.x/duplicate-fields.md",
              "sourceDirName": ".",
              "slug": "/duplicate-fields",
              "permalink": "/docs/duplicate-fields",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/duplicate-fields.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "duplicate-fields",
                "title": "Duplicate Fields",
                "sidebar_label": "Duplicate Fields"
              }
            },
            {
              "unversionedId": "introduction",
              "id": "version-2.3.x/introduction",
              "title": "Introduction",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-2.3.x/introduction.md",
              "sourceDirName": ".",
              "slug": "/introduction",
              "permalink": "/docs/introduction",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/introduction.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "introduction",
                "title": "Introduction",
                "sidebar_label": "Introduction"
              }
            },
            {
              "unversionedId": "metadata",
              "id": "version-2.3.x/metadata",
              "title": "Metadata",
              "description": "Timestamps",
              "source": "@site/versioned_docs/version-2.3.x/metadata.md",
              "sourceDirName": ".",
              "slug": "/metadata",
              "permalink": "/docs/metadata",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/metadata.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "metadata",
                "title": "Metadata",
                "sidebar_label": "Metadata"
              }
            },
            {
              "unversionedId": "middleware",
              "id": "version-2.3.x/middleware",
              "title": "Middleware",
              "description": "CRUD",
              "source": "@site/versioned_docs/version-2.3.x/middleware.md",
              "sourceDirName": ".",
              "slug": "/middleware",
              "permalink": "/docs/middleware",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/middleware.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "middleware",
                "title": "Middleware",
                "sidebar_label": "Middleware"
              }
            },
            {
              "unversionedId": "misc",
              "id": "version-2.3.x/misc",
              "title": "Miscellaneous",
              "description": "Model generation",
              "source": "@site/versioned_docs/version-2.3.x/misc.md",
              "sourceDirName": ".",
              "slug": "/misc",
              "permalink": "/docs/misc",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/misc.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "misc",
                "title": "Miscellaneous",
                "sidebar_label": "Miscellaneous"
              }
            },
            {
              "unversionedId": "model-generation",
              "id": "version-2.3.x/model-generation",
              "title": "Model Generation",
              "description": "In some situations models may be required before or without endpoint generation. For example some hapi plugins may require models to exist before the routes are registered. In these cases rest-hapi provides a `generateModels` function that can be called independently.",
              "source": "@site/versioned_docs/version-2.3.x/model-generation.md",
              "sourceDirName": ".",
              "slug": "/model-generation",
              "permalink": "/docs/model-generation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/model-generation.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "model-generation",
                "title": "Model Generation",
                "sidebar_label": "Model Generation"
              }
            },
            {
              "unversionedId": "mongoose-wrapper-methods",
              "id": "version-2.3.x/mongoose-wrapper-methods",
              "title": "Mongoose Wrapper Methods",
              "description": "rest-hapi provides mongoose wrapper methods for the user to take advantage of in their server code. These methods provide several advantages including:",
              "source": "@site/versioned_docs/version-2.3.x/mongoose-wrapper-methods.md",
              "sourceDirName": ".",
              "slug": "/mongoose-wrapper-methods",
              "permalink": "/docs/mongoose-wrapper-methods",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/mongoose-wrapper-methods.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "mongoose-wrapper-methods",
                "title": "Mongoose Wrapper Methods",
                "sidebar_label": "Mongoose Wrapper Methods"
              }
            },
            {
              "unversionedId": "policies",
              "id": "version-2.3.x/policies",
              "title": "Policies",
              "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme.",
              "source": "@site/versioned_docs/version-2.3.x/policies.md",
              "sourceDirName": ".",
              "slug": "/policies",
              "permalink": "/docs/policies",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/policies.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "policies",
                "title": "Policies",
                "sidebar_label": "Policies"
              }
            },
            {
              "unversionedId": "querying",
              "id": "version-2.3.x/querying",
              "title": "Querying",
              "description": "Query parameters can be added to GET requests to filter responses.  These parameters",
              "source": "@site/versioned_docs/version-2.3.x/querying.md",
              "sourceDirName": ".",
              "slug": "/querying",
              "permalink": "/docs/querying",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/querying.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "querying",
                "title": "Querying",
                "sidebar_label": "Querying"
              }
            },
            {
              "unversionedId": "questions",
              "id": "version-2.3.x/questions",
              "title": "Questions",
              "description": "If you have any questions/issues/feature requests, please feel free to open an issue.  We'd love to hear from you!",
              "source": "@site/versioned_docs/version-2.3.x/questions.md",
              "sourceDirName": ".",
              "slug": "/questions",
              "permalink": "/docs/questions",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/questions.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "questions",
                "title": "Questions",
                "sidebar_label": "Questions"
              }
            },
            {
              "unversionedId": "quick-start",
              "id": "version-2.3.x/quick-start",
              "title": "Quick Start",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-2.3.x/quick-start.md",
              "sourceDirName": ".",
              "slug": "/quick-start",
              "permalink": "/docs/quick-start",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/quick-start.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "quick-start",
                "title": "Quick Start",
                "sidebar_label": "Quick Start"
              }
            },
            {
              "unversionedId": "route-customization",
              "id": "version-2.3.x/route-customization",
              "title": "Route Customization",
              "description": "Custom path names",
              "source": "@site/versioned_docs/version-2.3.x/route-customization.md",
              "sourceDirName": ".",
              "slug": "/route-customization",
              "permalink": "/docs/route-customization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/route-customization.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "route-customization",
                "title": "Route Customization",
                "sidebar_label": "Route Customization"
              }
            },
            {
              "unversionedId": "soft-delete",
              "id": "version-2.3.x/soft-delete",
              "title": "Soft Delete",
              "description": "rest-hapi supports soft delete functionality for documents.  When the config.enableSoftDelete property is set to `true, documents will gain an isDeleted property when they are created that will be set to false.  Whenever that document is deleted (via a rest-hapi endpoint or method), the document will remain in the collection, its isDeleted property will be set to true, and the deletedAt and deletedBy` properties (if enabled) will be populated.",
              "source": "@site/versioned_docs/version-2.3.x/soft-delete.md",
              "sourceDirName": ".",
              "slug": "/soft-delete",
              "permalink": "/docs/soft-delete",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/soft-delete.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "soft-delete",
                "title": "Soft Delete",
                "sidebar_label": "Soft Delete"
              }
            },
            {
              "unversionedId": "support",
              "id": "version-2.3.x/support",
              "title": "Support",
              "description": "Like this project? Please star it!",
              "source": "@site/versioned_docs/version-2.3.x/support.md",
              "sourceDirName": ".",
              "slug": "/support",
              "permalink": "/docs/support",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/support.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "support",
                "title": "Support",
                "sidebar_label": "Support"
              }
            },
            {
              "unversionedId": "swagger-documentation",
              "id": "version-2.3.x/swagger-documentation",
              "title": "Swagger Documentation",
              "description": "Swagger documentation (via hapi-swagger) is automatically generated for all endpoints and can be viewed by pointing a browser at the server URL. If you use the intro script this will be http8080/. The swagger docs provide quick access to testing your endpoints along with model schema descriptions and query options.",
              "source": "@site/versioned_docs/version-2.3.x/swagger-documentation.md",
              "sourceDirName": ".",
              "slug": "/swagger-documentation",
              "permalink": "/docs/swagger-documentation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/swagger-documentation.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "swagger-documentation",
                "title": "Swagger Documentation",
                "sidebar_label": "Swagger Documentation"
              }
            },
            {
              "unversionedId": "testing",
              "id": "version-2.3.x/testing",
              "title": "Testing",
              "description": "If you have downloaded the source you can run the tests with:",
              "source": "@site/versioned_docs/version-2.3.x/testing.md",
              "sourceDirName": ".",
              "slug": "/testing",
              "permalink": "/docs/testing",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/testing.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "testing",
                "title": "Testing",
                "sidebar_label": "Testing"
              }
            },
            {
              "unversionedId": "validation",
              "id": "version-2.3.x/validation",
              "title": "Validation",
              "description": "Route validation",
              "source": "@site/versioned_docs/version-2.3.x/validation.md",
              "sourceDirName": ".",
              "slug": "/validation",
              "permalink": "/docs/validation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/validation.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "validation",
                "title": "Validation",
                "sidebar_label": "Validation"
              }
            },
            {
              "unversionedId": "version-2.3.x-configuration",
              "id": "version-2.3.x/version-2.3.x-configuration",
              "title": "Configuration",
              "description": "Configuration of rest-hapi is handled through the `RestHapi.config` object. See the introduction for an example.  Below is a description of the current configuration options/properties.",
              "source": "@site/versioned_docs/version-2.3.x/configuration.md",
              "sourceDirName": ".",
              "slug": "/version-2.3.x-configuration",
              "permalink": "/docs/version-2.3.x-configuration",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.3.x/configuration.md",
              "tags": [],
              "version": "2.3.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.3.x-configuration",
                "title": "Configuration",
                "sidebar_label": "Configuration",
                "original_id": "configuration"
              }
            }
          ],
          "drafts": [],
          "sidebars": {}
        },
        {
          "versionName": "2.0.x",
          "label": "2.0.x",
          "banner": "unmaintained",
          "badge": true,
          "className": "docs-version-2.0.x",
          "path": "/docs/2.0.x",
          "tagsPath": "/docs/2.0.x/tags",
          "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x",
          "editUrlLocalized": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/i18n/en/docusaurus-plugin-content-docs/version-2.0.x",
          "isLast": false,
          "sidebarFilePath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_sidebars/version-2.0.x-sidebars.json",
          "contentPath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_docs/version-2.0.x",
          "contentPathLocalized": "/Users/justin/Documents/Projects/rest-hapi/v2-website/i18n/en/docusaurus-plugin-content-docs/version-2.0.x",
          "docs": [
            {
              "unversionedId": "version-2.0.x-configuration",
              "id": "version-2.0.x/version-2.0.x-configuration",
              "title": "Configuration",
              "description": "Configuration of rest-hapi is handled through the `RestHapi.config` object. See the introduction for an example.  Below is a description of the current configuration options/properties.",
              "source": "@site/versioned_docs/version-2.0.x/configuration.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-configuration",
              "permalink": "/docs/2.0.x/version-2.0.x-configuration",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/configuration.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-configuration",
                "title": "Configuration",
                "sidebar_label": "Configuration",
                "original_id": "configuration"
              }
            },
            {
              "unversionedId": "version-2.0.x-creating-endpoints",
              "id": "version-2.0.x/version-2.0.x-creating-endpoints",
              "title": "Creating Endpoints",
              "description": "Creating endpoints with rest-hapi can be accomplished three different ways:",
              "source": "@site/versioned_docs/version-2.0.x/creating-endpoints.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-creating-endpoints",
              "permalink": "/docs/2.0.x/version-2.0.x-creating-endpoints",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/creating-endpoints.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-creating-endpoints",
                "title": "Creating Endpoints",
                "sidebar_label": "Creating Endpoints",
                "original_id": "creating-endpoints"
              }
            },
            {
              "unversionedId": "version-2.0.x-introduction",
              "id": "version-2.0.x/version-2.0.x-introduction",
              "title": "Introduction",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-2.0.x/introduction.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-introduction",
              "permalink": "/docs/2.0.x/version-2.0.x-introduction",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/introduction.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-introduction",
                "title": "Introduction",
                "sidebar_label": "Introduction",
                "original_id": "introduction"
              }
            },
            {
              "unversionedId": "version-2.0.x-policies",
              "id": "version-2.0.x/version-2.0.x-policies",
              "title": "Policies",
              "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme.",
              "source": "@site/versioned_docs/version-2.0.x/policies.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-policies",
              "permalink": "/docs/2.0.x/version-2.0.x-policies",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/policies.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-policies",
                "title": "Policies",
                "sidebar_label": "Policies",
                "original_id": "policies"
              }
            },
            {
              "unversionedId": "version-2.0.x-querying",
              "id": "version-2.0.x/version-2.0.x-querying",
              "title": "Querying",
              "description": "Query parameters can be added to GET requests to filter responses.  These parameters",
              "source": "@site/versioned_docs/version-2.0.x/querying.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-querying",
              "permalink": "/docs/2.0.x/version-2.0.x-querying",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/querying.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-querying",
                "title": "Querying",
                "sidebar_label": "Querying",
                "original_id": "querying"
              }
            },
            {
              "unversionedId": "version-2.0.x-quick-start",
              "id": "version-2.0.x/version-2.0.x-quick-start",
              "title": "Quick Start",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-2.0.x/quick-start.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-quick-start",
              "permalink": "/docs/2.0.x/version-2.0.x-quick-start",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/quick-start.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-quick-start",
                "title": "Quick Start",
                "sidebar_label": "Quick Start",
                "original_id": "quick-start"
              }
            },
            {
              "unversionedId": "version-2.0.x-validation",
              "id": "version-2.0.x/version-2.0.x-validation",
              "title": "Validation",
              "description": "Route validation",
              "source": "@site/versioned_docs/version-2.0.x/validation.md",
              "sourceDirName": ".",
              "slug": "/version-2.0.x-validation",
              "permalink": "/docs/2.0.x/version-2.0.x-validation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-2.0.x/validation.md",
              "tags": [],
              "version": "2.0.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-2.0.x-validation",
                "title": "Validation",
                "sidebar_label": "Validation",
                "original_id": "validation"
              }
            }
          ],
          "drafts": [],
          "sidebars": {}
        },
        {
          "versionName": "1.7.x",
          "label": "1.7.x",
          "banner": "unmaintained",
          "badge": true,
          "className": "docs-version-1.7.x",
          "path": "/docs/1.7.x",
          "tagsPath": "/docs/1.7.x/tags",
          "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.7.x",
          "editUrlLocalized": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/i18n/en/docusaurus-plugin-content-docs/version-1.7.x",
          "isLast": false,
          "sidebarFilePath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_sidebars/version-1.7.x-sidebars.json",
          "contentPath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_docs/version-1.7.x",
          "contentPathLocalized": "/Users/justin/Documents/Projects/rest-hapi/v2-website/i18n/en/docusaurus-plugin-content-docs/version-1.7.x",
          "docs": [
            {
              "unversionedId": "version-1.7.x-mongoose-wrapper-methods",
              "id": "version-1.7.x/version-1.7.x-mongoose-wrapper-methods",
              "title": "Mongoose Wrapper Methods",
              "description": "rest-hapi provides mongoose wrapper methods for the user to take advantage of in their server code. These methods provide several advantages including:",
              "source": "@site/versioned_docs/version-1.7.x/mongoose-wrapper-methods.md",
              "sourceDirName": ".",
              "slug": "/version-1.7.x-mongoose-wrapper-methods",
              "permalink": "/docs/1.7.x/version-1.7.x-mongoose-wrapper-methods",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.7.x/mongoose-wrapper-methods.md",
              "tags": [],
              "version": "1.7.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.7.x-mongoose-wrapper-methods",
                "title": "Mongoose Wrapper Methods",
                "sidebar_label": "Mongoose Wrapper Methods",
                "original_id": "mongoose-wrapper-methods"
              }
            },
            {
              "unversionedId": "version-1.7.x-policies",
              "id": "version-1.7.x/version-1.7.x-policies",
              "title": "Policies",
              "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme.",
              "source": "@site/versioned_docs/version-1.7.x/policies.md",
              "sourceDirName": ".",
              "slug": "/version-1.7.x-policies",
              "permalink": "/docs/1.7.x/version-1.7.x-policies",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.7.x/policies.md",
              "tags": [],
              "version": "1.7.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.7.x-policies",
                "title": "Policies",
                "sidebar_label": "Policies",
                "original_id": "policies"
              }
            },
            {
              "unversionedId": "version-1.7.x-validation",
              "id": "version-1.7.x/version-1.7.x-validation",
              "title": "Validation",
              "description": "Route validation",
              "source": "@site/versioned_docs/version-1.7.x/validation.md",
              "sourceDirName": ".",
              "slug": "/version-1.7.x-validation",
              "permalink": "/docs/1.7.x/version-1.7.x-validation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.7.x/validation.md",
              "tags": [],
              "version": "1.7.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.7.x-validation",
                "title": "Validation",
                "sidebar_label": "Validation",
                "original_id": "validation"
              }
            }
          ],
          "drafts": [],
          "sidebars": {}
        },
        {
          "versionName": "1.6.x",
          "label": "1.6.x",
          "banner": "unmaintained",
          "badge": true,
          "className": "docs-version-1.6.x",
          "path": "/docs/1.6.x",
          "tagsPath": "/docs/1.6.x/tags",
          "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x",
          "editUrlLocalized": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/i18n/en/docusaurus-plugin-content-docs/version-1.6.x",
          "isLast": false,
          "sidebarFilePath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_sidebars/version-1.6.x-sidebars.json",
          "contentPath": "/Users/justin/Documents/Projects/rest-hapi/v2-website/versioned_docs/version-1.6.x",
          "contentPathLocalized": "/Users/justin/Documents/Projects/rest-hapi/v2-website/i18n/en/docusaurus-plugin-content-docs/version-1.6.x",
          "docs": [
            {
              "unversionedId": "version-1.6.x-associations",
              "id": "version-1.6.x/version-1.6.x-associations",
              "title": "Associations",
              "description": "The rest-hapi framework supports model associations that mimic associations in a relational database.  This includes one-one, one-many, many-one, and many-many relationships.  Associations are created by adding the relevant schema fields and populating the `associations object within routeOptions.  Associations exists as references to a document's _id` field, and can be populated to return the associated object.  See Querying for more details on how to populate associations.",
              "source": "@site/versioned_docs/version-1.6.x/associations.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-associations",
              "permalink": "/docs/1.6.x/version-1.6.x-associations",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/associations.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-associations",
                "title": "Associations",
                "sidebar_label": "Assocations",
                "original_id": "associations"
              }
            },
            {
              "unversionedId": "version-1.6.x-audit-logs",
              "id": "version-1.6.x/version-1.6.x-audit-logs",
              "title": "Audit Logs",
              "description": "By default, rest-hapi records all document-modifiying activities that occur within the generated endpoints. Each event is stored as a document within the auditLog collection.  The audit log documents can be set to expire by providing a value for config.auditLogTTL.  The value can be specified in integer seconds or as a human-readable time period (Ex",
              "source": "@site/versioned_docs/version-1.6.x/audit-logs.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-audit-logs",
              "permalink": "/docs/1.6.x/version-1.6.x-audit-logs",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/audit-logs.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-audit-logs",
                "title": "Audit Logs",
                "sidebar_label": "Audit Logs",
                "original_id": "audit-logs"
              }
            },
            {
              "unversionedId": "version-1.6.x-authentication",
              "id": "version-1.6.x/version-1.6.x-authentication",
              "title": "Authentication",
              "description": "Route authentication",
              "source": "@site/versioned_docs/version-1.6.x/authentication.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-authentication",
              "permalink": "/docs/1.6.x/version-1.6.x-authentication",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/authentication.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-authentication",
                "title": "Authentication",
                "sidebar_label": "Authentication",
                "original_id": "authentication"
              }
            },
            {
              "unversionedId": "version-1.6.x-authorization",
              "id": "version-1.6.x/version-1.6.x-authorization",
              "title": "Authorization",
              "description": "Route authorization",
              "source": "@site/versioned_docs/version-1.6.x/authorization.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-authorization",
              "permalink": "/docs/1.6.x/version-1.6.x-authorization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/authorization.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-authorization",
                "title": "Authorization",
                "sidebar_label": "Authorization",
                "original_id": "authorization"
              }
            },
            {
              "unversionedId": "version-1.6.x-configuration",
              "id": "version-1.6.x/version-1.6.x-configuration",
              "title": "Configuration",
              "description": "Configuration of rest-hapi is handled through the `RestHapi.config` object. See the introduction for an example.  Below is a description of the current configuration options/properties.",
              "source": "@site/versioned_docs/version-1.6.x/configuration.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-configuration",
              "permalink": "/docs/1.6.x/version-1.6.x-configuration",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/configuration.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-configuration",
                "title": "Configuration",
                "sidebar_label": "Configuration",
                "original_id": "configuration"
              }
            },
            {
              "unversionedId": "version-1.6.x-creating-endpoints",
              "id": "version-1.6.x/version-1.6.x-creating-endpoints",
              "title": "Creating Endpoints",
              "description": "Creating endpoints with rest-hapi can be accomplished three different ways:",
              "source": "@site/versioned_docs/version-1.6.x/creating-endpoints.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-creating-endpoints",
              "permalink": "/docs/1.6.x/version-1.6.x-creating-endpoints",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/creating-endpoints.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-creating-endpoints",
                "title": "Creating Endpoints",
                "sidebar_label": "Creating Endpoints",
                "original_id": "creating-endpoints"
              }
            },
            {
              "unversionedId": "version-1.6.x-duplicate-fields",
              "id": "version-1.6.x/version-1.6.x-duplicate-fields",
              "title": "Duplicate Fields",
              "description": "\"Duplicate fields\" is a rest-hapi feature that allows fields from an associated document to exist in the parent document while maintaining the original field value. This can be accomplished by setting config.enableDuplicateFields to true and adding the duplicate property to an association definition.",
              "source": "@site/versioned_docs/version-1.6.x/duplicate-fields.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-duplicate-fields",
              "permalink": "/docs/1.6.x/version-1.6.x-duplicate-fields",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/duplicate-fields.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-duplicate-fields",
                "title": "Duplicate Fields",
                "sidebar_label": "Duplicate Fields",
                "original_id": "duplicate-fields"
              }
            },
            {
              "unversionedId": "version-1.6.x-introduction",
              "id": "version-1.6.x/version-1.6.x-introduction",
              "title": "Introduction",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-1.6.x/introduction.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-introduction",
              "permalink": "/docs/1.6.x/version-1.6.x-introduction",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/introduction.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-introduction",
                "title": "Introduction",
                "sidebar_label": "Introduction",
                "original_id": "introduction"
              }
            },
            {
              "unversionedId": "version-1.6.x-metadata",
              "id": "version-1.6.x/version-1.6.x-metadata",
              "title": "Metadata",
              "description": "Timestamps",
              "source": "@site/versioned_docs/version-1.6.x/metadata.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-metadata",
              "permalink": "/docs/1.6.x/version-1.6.x-metadata",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/metadata.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-metadata",
                "title": "Metadata",
                "sidebar_label": "Metadata",
                "original_id": "metadata"
              }
            },
            {
              "unversionedId": "version-1.6.x-middleware",
              "id": "version-1.6.x/version-1.6.x-middleware",
              "title": "Middleware",
              "description": "CRUD",
              "source": "@site/versioned_docs/version-1.6.x/middleware.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-middleware",
              "permalink": "/docs/1.6.x/version-1.6.x-middleware",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/middleware.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-middleware",
                "title": "Middleware",
                "sidebar_label": "Middleware",
                "original_id": "middleware"
              }
            },
            {
              "unversionedId": "version-1.6.x-misc",
              "id": "version-1.6.x/version-1.6.x-misc",
              "title": "Miscellaneous",
              "description": "Model generation",
              "source": "@site/versioned_docs/version-1.6.x/misc.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-misc",
              "permalink": "/docs/1.6.x/version-1.6.x-misc",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/misc.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-misc",
                "title": "Miscellaneous",
                "sidebar_label": "Miscellaneous",
                "original_id": "misc"
              }
            },
            {
              "unversionedId": "version-1.6.x-model-generation",
              "id": "version-1.6.x/version-1.6.x-model-generation",
              "title": "Model Generation",
              "description": "In some situations models may be required before or without endpoint generation. For example some hapi plugins may require models to exist before the routes are registered. In these cases rest-hapi provides a `generateModels` function that can be called independently.",
              "source": "@site/versioned_docs/version-1.6.x/model-generation.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-model-generation",
              "permalink": "/docs/1.6.x/version-1.6.x-model-generation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/model-generation.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-model-generation",
                "title": "Model Generation",
                "sidebar_label": "Model Generation",
                "original_id": "model-generation"
              }
            },
            {
              "unversionedId": "version-1.6.x-mongoose-wrapper-methods",
              "id": "version-1.6.x/version-1.6.x-mongoose-wrapper-methods",
              "title": "Mongoose Wrapper Methods",
              "description": "rest-hapi provides mongoose wrapper methods for the user to take advantage of in their server code. These methods provide several advantages including:",
              "source": "@site/versioned_docs/version-1.6.x/mongoose-wrapper-methods.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-mongoose-wrapper-methods",
              "permalink": "/docs/1.6.x/version-1.6.x-mongoose-wrapper-methods",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/mongoose-wrapper-methods.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-mongoose-wrapper-methods",
                "title": "Mongoose Wrapper Methods",
                "sidebar_label": "Mongoose Wrapper Methods",
                "original_id": "mongoose-wrapper-methods"
              }
            },
            {
              "unversionedId": "version-1.6.x-policies",
              "id": "version-1.6.x/version-1.6.x-policies",
              "title": "Policies",
              "description": "rest-hapi comes with built-in support for policies via the mrhorse plugin. Policies provide a powerful method of applying the same business logic to multiple routes declaratively. They can be inserted at any point in the hapi request lifecycle, allowing you to layer your business logic in a clean, organized, and centralized manner. We highly recommend you learn more about the details and benefits of policies in the mrhorse readme.",
              "source": "@site/versioned_docs/version-1.6.x/policies.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-policies",
              "permalink": "/docs/1.6.x/version-1.6.x-policies",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/policies.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-policies",
                "title": "Policies",
                "sidebar_label": "Policies",
                "original_id": "policies"
              }
            },
            {
              "unversionedId": "version-1.6.x-querying",
              "id": "version-1.6.x/version-1.6.x-querying",
              "title": "Querying",
              "description": "Query parameters can be added to GET requests to filter responses.  These parameters",
              "source": "@site/versioned_docs/version-1.6.x/querying.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-querying",
              "permalink": "/docs/1.6.x/version-1.6.x-querying",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/querying.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-querying",
                "title": "Querying",
                "sidebar_label": "Querying",
                "original_id": "querying"
              }
            },
            {
              "unversionedId": "version-1.6.x-questions",
              "id": "version-1.6.x/version-1.6.x-questions",
              "title": "Questions",
              "description": "If you have any questions/issues/feature requests, please feel free to open an issue.  We'd love to hear from you!",
              "source": "@site/versioned_docs/version-1.6.x/questions.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-questions",
              "permalink": "/docs/1.6.x/version-1.6.x-questions",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/questions.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-questions",
                "title": "Questions",
                "sidebar_label": "Questions",
                "original_id": "questions"
              }
            },
            {
              "unversionedId": "version-1.6.x-quick-start",
              "id": "version-1.6.x/version-1.6.x-quick-start",
              "title": "Quick Start",
              "description": "Requirements",
              "source": "@site/versioned_docs/version-1.6.x/quick-start.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-quick-start",
              "permalink": "/docs/1.6.x/version-1.6.x-quick-start",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/quick-start.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-quick-start",
                "title": "Quick Start",
                "sidebar_label": "Quick Start",
                "original_id": "quick-start"
              }
            },
            {
              "unversionedId": "version-1.6.x-route-customization",
              "id": "version-1.6.x/version-1.6.x-route-customization",
              "title": "Route Customization",
              "description": "Custom path names",
              "source": "@site/versioned_docs/version-1.6.x/route-customization.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-route-customization",
              "permalink": "/docs/1.6.x/version-1.6.x-route-customization",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/route-customization.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-route-customization",
                "title": "Route Customization",
                "sidebar_label": "Route Customization",
                "original_id": "route-customization"
              }
            },
            {
              "unversionedId": "version-1.6.x-soft-delete",
              "id": "version-1.6.x/version-1.6.x-soft-delete",
              "title": "Soft Delete",
              "description": "rest-hapi supports soft delete functionality for documents.  When the config.enableSoftDelete property is set to `true, documents will gain an isDeleted property when they are created that will be set to false.  Whenever that document is deleted (via a rest-hapi endpoint or method), the document will remain in the collection, its isDeleted property will be set to true, and the deletedAt and deletedBy` properties (if enabled) will be populated.",
              "source": "@site/versioned_docs/version-1.6.x/soft-delete.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-soft-delete",
              "permalink": "/docs/1.6.x/version-1.6.x-soft-delete",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/soft-delete.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-soft-delete",
                "title": "Soft Delete",
                "sidebar_label": "Soft Delete",
                "original_id": "soft-delete"
              }
            },
            {
              "unversionedId": "version-1.6.x-support",
              "id": "version-1.6.x/version-1.6.x-support",
              "title": "Support",
              "description": "Like this project? Please star it!",
              "source": "@site/versioned_docs/version-1.6.x/support.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-support",
              "permalink": "/docs/1.6.x/version-1.6.x-support",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/support.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-support",
                "title": "Support",
                "sidebar_label": "Support",
                "original_id": "support"
              }
            },
            {
              "unversionedId": "version-1.6.x-swagger-documentation",
              "id": "version-1.6.x/version-1.6.x-swagger-documentation",
              "title": "Swagger Documentation",
              "description": "Swagger documentation (via hapi-swagger) is automatically generated for all endpoints and can be viewed by pointing a browser at the server URL. If you use the intro script this will be http8080/. The swagger docs provide quick access to testing your endpoints along with model schema descriptions and query options.",
              "source": "@site/versioned_docs/version-1.6.x/swagger-documentation.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-swagger-documentation",
              "permalink": "/docs/1.6.x/version-1.6.x-swagger-documentation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/swagger-documentation.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-swagger-documentation",
                "title": "Swagger Documentation",
                "sidebar_label": "Swagger Documentation",
                "original_id": "swagger-documentation"
              }
            },
            {
              "unversionedId": "version-1.6.x-testing",
              "id": "version-1.6.x/version-1.6.x-testing",
              "title": "Testing",
              "description": "If you have downloaded the source you can run the tests with:",
              "source": "@site/versioned_docs/version-1.6.x/testing.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-testing",
              "permalink": "/docs/1.6.x/version-1.6.x-testing",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/testing.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-testing",
                "title": "Testing",
                "sidebar_label": "Testing",
                "original_id": "testing"
              }
            },
            {
              "unversionedId": "version-1.6.x-validation",
              "id": "version-1.6.x/version-1.6.x-validation",
              "title": "Validation",
              "description": "Route validation",
              "source": "@site/versioned_docs/version-1.6.x/validation.md",
              "sourceDirName": ".",
              "slug": "/version-1.6.x-validation",
              "permalink": "/docs/1.6.x/version-1.6.x-validation",
              "draft": false,
              "editUrl": "https://github.com/JKHeadley/rest-hapi/tree/master/docs/versioned_docs/version-1.6.x/validation.md",
              "tags": [],
              "version": "1.6.x",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "version-1.6.x-validation",
                "title": "Validation",
                "sidebar_label": "Validation",
                "original_id": "validation"
              }
            }
          ],
          "drafts": [],
          "sidebars": {}
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "/2018/06/26/How-To-Build-Powerful-APIs-Blazingly-Fast-With-Nodejs",
          "metadata": {
            "permalink": "/blog/2018/06/26/How-To-Build-Powerful-APIs-Blazingly-Fast-With-Nodejs",
            "source": "@site/blog/2018-06-26-How-To-Build-Powerful-APIs-Blazingly-Fast-With-Nodejs.md",
            "title": "How to build powerful REST APIs blazingly fast with Node.js",
            "description": "Original post can be found here on Medium",
            "date": "2018-06-26T00:00:00.000Z",
            "formattedDate": "June 26, 2018",
            "tags": [],
            "readingTime": 6.2,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Justin Headley",
                "url": "http://twitter.com/JKHeadley"
              }
            ],
            "frontMatter": {
              "title": "How to build powerful REST APIs blazingly fast with Node.js",
              "author": "Justin Headley",
              "authorURL": "http://twitter.com/JKHeadley",
              "authorFBID": 27403843
            },
            "nextItem": {
              "title": "The Problem With MongoDB",
              "permalink": "/blog/2017/02/17/The-Problem-With-MongoDB"
            }
          },
          "content": "> Original post can be found [here on Medium](https://medium.com/@headley.justin/how-to-build-powerful-rest-apis-blazingly-fast-with-node-js-86d6e55a5b34)\n\n<p align=\"center\"><img width=\"3888\" height=\"2592\" src=\"https://cdn-images-1.medium.com/max/2000/1*DYKqPVAB617KRYTMK7-34A.jpeg\" alt=\"fast red car\"></img></p>\n\n---\n\nLet’s face it, if you’re a web developer, you deal with APIs. Whether you write your own or use someone else’s, it’s just part of the job. REST APIs in particular are very common place. Unfortunately when it comes to the [wild west world](https://twitter.com/nodejs/status/915607972918603776) of Javascript and Node.js, [standards and good practice](https://hackernoon.com/restful-api-designing-guidelines-the-best-practices-60e1d954e7c9) in writing RESTful APIs can sometimes get thrown out the window.\n\n<!--truncate-->\n\nWhy?\n\nBecause its “easier”\nBecause “good enough” is sometimes all it takes\nBecause everyone’s “standard” might be different\n…you name it\n\n<p align=\"center\">\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nSKp2StlS6s\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n</p>\n\n> don’t be that developer…\n\nAre any of these good reasons to write weak code? Of course not, but they exist nonetheless. Its human nature. It’s all to easy to “take a shortcut”, and sometimes with tight deadlines it seems unavoidable. Trust me I’ve been there. So what can be done about it? Well the good news is there are better ways to develop when you’ve got the right toolset, and with enough luck you might even discover that the “right” way is the easy way. It took me a long time to find my own path of discovery. My hope is by sharing my story I might save you (and your API consumer) some heartache. Here’s what I’ve learned…\n\n> You can skip to The Result section if you want to get directly to business. Or visit https://github.com/JKHeadley/rest-hapi\n\n\n<p align=\"center\"><img width=\"700\" height=\"394\" src=\"https://cdn-images-1.medium.com/max/800/1*06tX3horiyy70zu9i4bQ1Q.jpeg\" alt=\"hold on\"></img></p>\n\n> you’re in for a wild ride\n\n# The Story\n\nFor the past several years I’ve been working as a web developer for the software consultancy [Scal.io](http://scal.io/). During this time I’ve had the pleasure of learning Node.js and working on multiple apps all serving RESTful APIs. At first everything seemed great. I mean, just google [any tutorial](https://www.google.com/search?q=how+to+build+node+api&oq=how+to+build+node+api&aqs=chrome..69i57.5240j0j9&sourceid=chrome&ie=UTF-8) for building a RESTful API with Node.js. You’ll find tons of articles and videos on how to have your own server up and running in minutes.\n\nWow! This stuff is easy! (I thought) At least at first…\n\nIt wasn’t long before I started running into issues.\n\nOh, you want payload validation? What about query parameters? How can I document these endpoints? Do I really have to copy and paste these route handlers over and over? Wait, you want to use MongoDB, but [still support relationships](https://hackernoon.com/the-problem-with-mongodb-d255e897b4b)? 😳\n\nProgramming with Node.js is extremely flexible which means even a simple task can be solved many different ways. Unfortunately that means developers are free to [overcomplicate things](https://medium.com/javascript-scene/the-single-biggest-mistake-programmers-make-every-day-62366b432308) (which we tend to do). It’s no wonder then how API development can get out of hand when feature requests start piling up. This can quickly turn into an ugly mess, especially if you’re trying to coordinate with other developers.\n\n\n<p align=\"center\"><img width=\"700\" height=\"459\" src=\"https://cdn-images-1.medium.com/max/800/1*PfYC0YJCZAGjTaJ3kk2toQ.jpeg\" alt=\"madness\"></img></p>\n\n> the king of sanity?\n\nAfter working on several projects together, a [buddy of mine](https://github.com/zacharyclaysmith) who’s an awesome developer came up with (and implemented) the great idea of generating RESTful endpoints based on our data models. I immediately loved it. Now we were spending more time focusing on the structure and business logic of the app rather than writing CRUD endpoints over and over. Not only that, but any time we needed new functionality (like filtering a GET request) we only had to write it once for all endpoints! It felt like a [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) API paradise 😆\n\nI knew we were on to something…\n\n# The Journey\n\nSoon after we completed that project I started looking into how we could take what we had created and make a useful tool out of it. The original solution worked well, but it was [tightly coupled](https://www.agiletestingframework.com/devops-journey/transformation/tightly-coupled-code/) to the project and still lacked a good amount of functionality. I spent days brainstorming and re-writing code. After what seemed like a huge amount of effort, I finally had a [workable solution](https://hackernoon.com/the-problem-with-apis-331f08f7a39c). However (like most beginnings)…it was pretty embarrassing.\n\nThe tool worked, but it existed as a framework that you had to clone directly from GitHub (eww). The developer was forced to design their project around the framework and it still lacked a lot of functionality, even compared to our original solution.\n\n\n<p align=\"center\"><img width=\"700\" height=\"450\" src=\"https://cdn-images-1.medium.com/max/800/1*mE6kQg2C80tBBP6Ez_ULQQ.png\" alt=\"serious\"></img></p>\n\n> I feels it tho!\n\nLuckily things were just getting started. I still had my own hopes and dreams for the project, and now that it was officially public it ever so slowly began to gain some interest. The magic of open source came to life as developers gave their feedback, submitted issues, and some even began to contribute!\n\nBefore long major improvements were made such as turning the project into an [npm module](https://www.npmjs.com/package/rest-hapi) and a [hapi](http://hapi.js/) server plugin. I also had the amazing opportunity (thanks to Scal.io) to develop and use the tool within some real world projects.\n\nI always believed in the core concept of the project but it was exciting to have its usefulness validated through my own experience.\n\n\n<p align=\"center\"><a class=\"_2XBDTIVigBJDybhZvL-hU3\" href=\"https://giphy.com/gifs/BdAn5S0xigpO?utm_source=iframe&amp;utm_medium=embed&amp;utm_campaign=Embeds&amp;utm_term=https%3A%2F%2Fcdn.embedly.com%2Fwidgets%2Fmedia.html%3Fsrc%3Dhttps%3A%2F%2Fgiphy.com%2Fembed%2FBdAn5S0xigpO%2Ftwitter%2Fiframe&amp;%3Burl=https%3A%2F%2Fgiphy.com%2Fgifs%2FBdAn5S0xigpO&amp;%3Bimage=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FBdAn5S0xigpO%2Fgiphy.gif&amp;%3Bkey=a19fcc184b9711e1b4764040d3dc5c07&amp;%3Btype=text%2Fhtml&amp;%3Bschema=giphy\" target=\"_blank\" onmouseover=\"trackEvent('Hover', 'Image')\" onclick=\"trackEvent('Click', 'Image')\" data-gif=\"\">\n                              <img id=\"gif\" class=\"nlSABoG9CSaJpsufv8WW9 _3vYn8QjoEvrXxHyqdn9ddZ _2XBDTIVigBJDybhZvL-hU3\" src=\"https://media.giphy.com/media/BdAn5S0xigpO/200w.webp\" srcset=\"https://media.giphy.com/media/BdAn5S0xigpO/200w.webp 200w,\n                              https://media.giphy.com/media/BdAn5S0xigpO/giphy.webp 480w\" sizes=\"100vw\" alt=\"\">\n                          </img></a></p>\n\n> yessss\n\nThe more it improved the more I felt we had really tapped into a goldmine for RESTful API development. The resulting code was consistent, robust, and easy to follow (standards…yay!). Not only that, but what previously took days or weeks to develop now could be done in just a few hours!\n\n# The Result\n\n<p align=\"center\"><img width=\"367\" height=\"298\" src=\"https://cdn-images-1.medium.com/max/800/1*fpvgfJJX0LjR74xVMZ3oUQ.png\" alt=\"serious\"></img></p>\n\n> rest-hapi\n\nAfter nearly two years of hard work and development I’m excited to introduce [rest-hapi v1](https://github.com/JKHeadley/rest-hapi) to the web development community. We’ve been able to pack a lot of useful features into the tool so far including:\n\n- Automatic generation of [CRUD](https://jkheadley.github.io/rest-hapi/docs/creating-endpoints.html) and [association](https://jkheadley.github.io/rest-hapi/docs/associations.html) endpoints with [middleware](https://jkheadley.github.io/rest-hapi/docs/middleware.html) support\n- [joi](https://github.com/hapijs/joi) [validation](https://jkheadley.github.io/rest-hapi/docs/validation.html)\n- Route-level and document-level [authorization](https://jkheadley.github.io/rest-hapi/docs/authorization.html)\n- [Swagger docs](https://jkheadley.github.io/rest-hapi/docs/swagger-documentation.html) for all generated endpoints\n- [Query parameter](https://jkheadley.github.io/rest-hapi/docs/querying.html) support for searching, sorting, filtering, pagination, and embedding of associated models\n- Endpoint activity history through [Audit Logs](https://jkheadley.github.io/rest-hapi/docs/audit-logs.html)\n- Support for [policies](https://jkheadley.github.io/rest-hapi/docs/policies.html)\n- [Duplicate fields](https://jkheadley.github.io/rest-hapi/docs/duplicate-fields.html)\n- Support for [“soft” delete](https://jkheadley.github.io/rest-hapi/docs/soft-delete.html)\n- Optional [metadata](https://jkheadley.github.io/rest-hapi/docs/metadata.html) for documents\n- Mongoose [wrapper methods](https://jkheadley.github.io/rest-hapi/docs/mongoose-wrapper-methods.html)\n- …and more!\nWith just a few simple data models you can instantly generate hundreds of documented, robust endpoints. Check out these examples:\n\n\n<p align=\"center\"><img width=\"700\" height=\"489\" src=\"https://cdn-images-1.medium.com/max/800/1*bJVbMI6QOhtxjGIl7O8MxA.gif\" alt=\"serious\"></img></p>\n\n> generating endpoints locally\n\n<p align=\"center\"><img width=\"700\" height=\"489\" src=\"https://cdn-images-1.medium.com/max/800/1*_2YHCLAmT1HmDYn0IR4qSg.gif\" alt=\"serious\"></img></p>\n\n> querying the user collection and populating the user-role relationship\n\nThe goal from the start was to develop a tool that would allow developers to build powerful REST APIs with minimal overhead and I believe we have done that! I still have plenty of hopes and dreams for the future of the project, but as of now I’m proud of what we’ve accomplished.\n\nIs it the only tool out there of its kind? Nope.\n\nDoes it fit every situation? Of course not!\n\nIs it useful for you? We’re hoping you’ll [check it out](https://github.com/JKHeadley/rest-hapi) and decide for yourself! We’d love to hear your feedback. If you do like it, feel free to give it a star on GitHub 😉\n\nIn a future post I’ll go into more details of the design philosophy behind rest-hapi along with some hands-on examples of how you can use it to build your own awesome REST APIs.\n\nIf you want to get in touch you can reach me at [Twitter](https://twitter.com/JKHeadley), [Facebook](https://www.facebook.com/justinkheadley), or [LinkedIn](https://www.linkedin.com/in/justinkheadley), or email me at headley.justin@gmail.com. Hope you enjoyed the post. Thanks for reading!"
        },
        {
          "id": "/2017/02/17/The-Problem-With-MongoDB",
          "metadata": {
            "permalink": "/blog/2017/02/17/The-Problem-With-MongoDB",
            "source": "@site/blog/2017-02-17-The-Problem-With-MongoDB.md",
            "title": "The Problem With MongoDB",
            "description": "Original post can be found here on Medium",
            "date": "2017-02-17T00:00:00.000Z",
            "formattedDate": "February 17, 2017",
            "tags": [],
            "readingTime": 7.5,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Justin Headley",
                "url": "http://twitter.com/JKHeadley"
              }
            ],
            "frontMatter": {
              "title": "The Problem With MongoDB",
              "author": "Justin Headley",
              "authorURL": "http://twitter.com/JKHeadley",
              "authorFBID": 27403843
            },
            "prevItem": {
              "title": "How to build powerful REST APIs blazingly fast with Node.js",
              "permalink": "/blog/2018/06/26/How-To-Build-Powerful-APIs-Blazingly-Fast-With-Nodejs"
            },
            "nextItem": {
              "title": "The Problem With APIs",
              "permalink": "/blog/2016/11/19/The-Problem-With-APIs"
            }
          },
          "content": "> Original post can be found [here on Medium](https://hackernoon.com/the-problem-with-mongodb-d255e897b4b)\n\n<p align=\"center\"><img width=\"325\" height=\"244\" src=\"https://cdn-images-1.medium.com/max/600/1*KHIQHTqhFobGU_q0cL6orw.png\" alt=\"mongodb image\"></img></p>\n\n---\n\nWhen building a web app (or any app) that needs to store data, one of the biggest decisions to make is what database to use. In the world of start-ups, where MVP's and agile development reigns, NoSQL databases have grown in [increasing popularity](http://www.techrepublic.com/article/nosql-databases-eat-into-the-relational-database-market/) due largely to their [flexible](http://www.ibmbigdatahub.com/blog/rise-nosql-databases) nature and ease of use. Among them MongoDB stands out by far as the most [popular](http://db-engines.com/en/ranking). [Mongoose](http://mongoosejs.com/), a fantastic ODM for MongoDB in Nodejs, has also seen a rise in popularity, having almost [doubled](https://npm-stat.com/charts.html?package=mongoose&from=2012-01-01&to=2016-12-31) in number of npm downloads from 2015 to 2016.\nFor web apps using Nodejs/javascript, MongoDB is particularly nice since data is stored using JSON objects, making reading and writing data fluid and natural. However, despite all these great advantages, MongoDB still lacks one of the most useful features found in relational databases, namely…relationships.\n\n<!--truncate-->\n\n<p align=\"center\"><img width=\"541\" height=\"709\" src=\"https://cdn-images-1.medium.com/max/800/1*yX49yeWyB5nTg7eLTiroSA.jpeg\" alt=\"comic image\"></img></p>\n\n> Not how it works…\n\nFor almost any app that stores data, its natural for different data entities to have relationships with each other. User's have roles, shopping carts have items, books have categories…you get the idea. These relationships generally take one of three different forms: one-to-one, one-to-many, and many-many. While MongoDB is not a relational database, there are actually two recommended approaches to representing relationships between entities. Lets take a look at each and see how they pan out.\nNote: if you feel like you are already familiar with this topic, or just want a solution, feel free to scroll down to the grumpy cat…(or just check out [rest-hapi](https://github.com/JKHeadley/rest-hapi))\n\n\n---\n\n## Method 1: [Embedding Documents](https://docs.mongodb.com/v3.0/tutorial/model-embedded-one-to-many-relationships-between-documents/)\n\nThe most natural method for relating data (represented as [documents](https://docs.mongodb.com/v3.0/reference/glossary/#term-document) in MongoDB is to embed them in one another. The advantage to this approach is that all the related data can be retrieved with just one query. This is very efficient and seems good at first. Sometimes this can be an appropriate approach, but relying on embedded relationships can come at a high cost down the road. Consider an example with users and roles, where users can belong to one role and roles can have many users. In this case we can either choose to embed user documents inside role documents, or vice versa. If we decide that users are the most important entity and that roles should be embedded within them, then we could end up with data that looks like this:\n\n`Users:`\n```javascript\n[\n   {\n      _id: 1234,\n      email: 'bob@admin.com',\n      role: {\n         name: 'Admin',\n         description: 'A user with awesome powers.'\n      }\n   },\n   {\n      _id: 4321,\n      email: 'bill@admin.com',\n      role: {\n         name: 'Admin',\n         description: 'A user with awesome powers.'\n      }\n   }\n]\n```\n\nThe problem with his approach arises when we want to change the details of a role. If we update say, the description of the role for the first user, the role description for the second user stays the same. This is a problem if we want to stay consistent, which we almost always do. It may not seem like a big issue with only two users, but what about when there are hundreds of users? Finding and updating every embedded role does not sound fun.\nRealizing this, we may choose to embed users inside roles instead. This could result in data like so:\n\n`Roles:`\n```javascript\n[\n   {\n      _id: 5678,\n      name: 'Admin',\n      description: 'A user with awesome powers.',\n      users: [\n         {\n            email: 'bob@admin.com'\n         },\n         {\n            email: 'bill@admin.com'\n         }\n      ]\n   }\n]\n```\n\nProblem solved, right? Sure, if no other entities in our database have relationships with users…which is unlikely. If we have another entity, \"teams\", that can relate to multiple users, then we're back at square one. Updating a user's email would have to be reflected in any role or team that the users existed in. As the number of entities and relationships grow, the consistency issues grow even faster. This usually results in code that is a nightmare of confusion. The efficiency that we had in the beginning is gone as well. So maybe there's a better way? Lets check out the next approach.\n\n## Method 2: [Document References](https://docs.mongodb.com/v3.0/tutorial/model-referenced-one-to-many-relationships-between-documents/)\n\nRather than embedding documents inside one another, we can give each document an id and store related document ids rather than the whole document. Lets look at the data from the previous example represented this way:\n\n`Users:`\n```javascript\n[\n   {\n      _id: 1234,\n      email: 'bob@admin.com',\n      role: 5678\n   },\n   {\n      _id: 4321,\n      email: 'bill@admin.com',\n      role: 5678\n   }\n]\n```\n\n`Roles:`\n```javascript\n[\n   {\n      _id: 5678,\n      name: 'Admin',\n      description: 'A user with awesome powers.',\n      users: [\n         1234,\n         4321\n      ]\n   }\n]\n```\n\nNow whenever a document is updated, no other actions are needed because the reference ids don't change. Consistency problem solved! However there is a tradeoff. In Method 1 only one query was needed to grab all the data related to a user (or a role). Now in order to get the data for a role AND its associated users, we must first perform a query for the role and then perform another query to look up the users based on the ids. This may not seem that bad, but it can quickly get out of hand as well. Lets bring in the teams entity and look at our data again:\n\n`Users:`\n```javascript\n[\n   {\n      _id: 1234,\n      email: 'bob@admin.com',\n      role: 5678\n   },\n   {\n      _id: 4321,\n      email: 'bill@admin.com',\n      role: 5678\n   }\n]\n```\n\n`Roles:`\n```javascript\n[\n   {\n      _id: 5678,\n      name: 'Admin',\n      description: 'A user with awesome powers.',\n      users: [\n         1234,\n         4321\n      ]\n   }\n]\n```\n\n`Teams:`\n```javascript\n[\n   {\n      _id: 1357,\n      name: 'Managers',\n      description: 'They manage things.',\n      users: [\n         1234\n      ]\n   },\n   {\n      _id: 9753,\n      name: 'Editors',\n      description: 'They edit things.',\n      users: [\n         4321\n      ]\n   }\n]\n```\n\nNow if we want to retrieve all the data contained in a role, we have to do the same two queries as before, along with a third more complex query to populate the team data for each user. As a developer you are now left with having to write complex query handlers for EVERY situation in which related data needs to be retrieved.\nThis becomes even more difficult if you are trying to retrieve this data through a web api. The api would have to accept some sort of \"embed\" query parameter and each endpoint would need to support logic to populate nested data. On top of this more logic would be needed to support filtering queries based on referenced objects. This issue usually results in many overly-specific endpoints with custom logic for different \"types\" of queries tuned to individual entity structures. This approach can also quickly lead to hard to scale, hard to maintain code.\n\n<p align=\"center\"><img width=\"541\" height=\"709\" src=\"https://cdn-images-1.medium.com/max/800/1*f1Tsk-T8fVuXzPr0g1kTtg.jpeg\" alt=\"grumpy cat image\"></img></p>\n \n > In this case…yes\n\nSo what now?\n\nSo which approach should we take? Ideally you would want to use a mixture of embedded and referenced relationships that are optimized for your overall model structure. The problem is this is impossible to do from the start as the model structure is bound to change during development (i.e. agile development), and in general trying to \"optimize\" things from the start can be a [misguided approach](http://seanhess.github.io/2011/12/15/optimization_is_like_firing_clay.html).\nAs an attempt to resolve some of these issues, I built a tool called [rest-hapi](https://github.com/JKHeadley/rest-hapi). In my previous post I discussed how rest-hapi works to simplify the development of APIs by encapsulating endpoint logic into [model configuration](https://github.com/JKHeadley/rest-hapi#creating-endpoints). Since then rest-hapi has been upgraded to be an [npm module](https://www.npmjs.com/package/rest-hapi)/[hapi plugin](https://www.npmjs.com/package/rest-hapi) and can also be used as a [wrapper](https://github.com/JKHeadley/rest-hapi/blob/master/README.md#mongoose-wrapper-methods) for the mongoose ODM.\nWith rest-hapi, [entity relationships](https://github.com/JKHeadley/rest-hapi#associations) are defined as part of a model's configuration, and wrapper methods are provided that support adding, removing, populating, and querying relational data. It even supports an equivalent form of a [junction table](https://github.com/JKHeadley/rest-hapi#many_many-linking-models) for many-to-many relationships that require data for a specific relationship instance. While this may not be an optimized solution, I believe it does support an optimal development environment. rest-hapi allows the developer to focus on developing apps in an agile manner and getting things up and running quickly. It combines the flexibility that MongoDB is famous for with the power of relational structure.\n\n\n<p align=\"center\"><img width=\"530\" height=\"403\" src=\"https://cdn-images-1.medium.com/max/800/1*kUWyDV-zOa36gotDryDV_A.jpeg\" alt=\"grumpy cat image\"></img></p>\n\n> Fast and Flexible\n\nMy latest endeavor has been to develop a boilerplate user system (called [appy](https://github.com/JKHeadley/appy)) that provides common user services while leveraging the power of rest-hapi to give a full-featured app bootstrapper. I just completed the first version and so far I feel that it exemplifies the usefulness of rest-hapi. The [permissions system](https://github.com/JKHeadley/appy/wiki/Authorization#appy-permission-system) implemented in appy even takes advantage of the junction table support to allow for enabling/disabling of specific permission relationships.\nI hope you take some time to check out rest-hapi and appy. I feel like they can be a significant contribution to the developer community. If you have any feedback, feel free to leave a comment below or open an issue in [GitHub](https://github.com/JKHeadley/rest-hapi/issues). If you want to get in touch you can reach me at [Twitter](https://twitter.com/JKHeadley), [Facebook](https://www.facebook.com/justinkheadley), or [LinkedIn](https://www.linkedin.com/in/justinkheadley), or email me at headley.justin@gmail.com. I hope you enjoyed this post, thanks for reading!"
        },
        {
          "id": "/2016/11/19/The-Problem-With-APIs",
          "metadata": {
            "permalink": "/blog/2016/11/19/The-Problem-With-APIs",
            "source": "@site/blog/2016-11-19-The-Problem-With-APIs.md",
            "title": "The Problem With APIs",
            "description": "Original post can be found here on Medium",
            "date": "2016-11-19T00:00:00.000Z",
            "formattedDate": "November 19, 2016",
            "tags": [],
            "readingTime": 3.38,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Justin Headley",
                "url": "http://twitter.com/JKHeadley"
              }
            ],
            "frontMatter": {
              "title": "The Problem With APIs",
              "author": "Justin Headley",
              "authorURL": "http://twitter.com/JKHeadley",
              "authorFBID": 27403843
            },
            "prevItem": {
              "title": "The Problem With MongoDB",
              "permalink": "/blog/2017/02/17/The-Problem-With-MongoDB"
            }
          },
          "content": "> Original post can be found [here on Medium](https://hackernoon.com/the-problem-with-apis-331f08f7a39c)\n\n<p align=\"center\">\n<img width=\"525\" height=\"525\" src=\"https://cdn-images-1.medium.com/max/600/1*lAR9Uh_gJ7dp23e0vhy5Hg.png\" alt=\"api image\">\n</img>\n</p>\n\nThese days, if you are a developer working on a web or mobile application, its likely you're going to need to communicate with a server for specific services or to access a database. This means implementing an API (usually a RESTful API) will be a critical part of developing your app. Unfortunately, RESTful APIs can take many different shapes and forms, even though most of them accomplish very similar functions. This is especially true in the world of javascript, where developers have free range to structure their code just about however they please. If you've worked on multiple API projects, its likely you've had the experience of writing the same API code a thousand different times and possibly a thousand different ways. There are some awesome tools out there that make this process a lot less painful, such as server frameworks like hapi and express or ODM/ORMs like mongoose and sequelize, however even with these tools there is a substantial amount of code involved with setting up even the most basic CRUD API endpoints specific to a project, especially if you plan on implementing standard features such as API documentation and validation. While all these tools, options, and features allow for great control over your API, they can become burdensome if not overwhelming, especially if you are trying to rapidly develop your API for a proof of concept/minimum viable product, and even more so if you are new to developing APIs.\n\n<!--truncate-->\n\n<p align=\"center\">\n<img width=\"512\" height=\"501\" src=\"https://cdn-images-1.medium.com/max/800/1*7hioed9q1P-8TwWnJNVZ9g.jpeg\" alt=\"wolf javascrpt image\">\n</img>\n</p>\n\n> Do any of us really?\n\nWith this in mind I decided to create a framework for the purpose of rapid RESTful API development. My aim was to provide a tool that allows developers to quickly set up REST endpoints that mirror the structure of their database schema, even if they have little experience with APIs. The result was [rest-hapi](https://github.com/JKHeadley/rest-hapi), a RESTful API generator built around the [hapi](http://hapijs.com/) framework and [mongoose](http://mongoosejs.com/) ODM. rest-hapi automatically sets up CRUD endpoints based on mongoose models, which means all the developer has to do is set up their mongoose models and configure the server, and they're good to go! On top of this, rest-hapi has built-in validation (using [joi](https://github.com/hapijs/joi)) and documentation (via [hapi-swagger](https://github.com/glennjones/hapi-swagger)). Once the server is up and running, it can quickly and easily be tested and documented by viewing the swagger docs.\n\n<p align=\"center\"><img width=\"160\" height=\"160\" src=\"https://cdn-images-1.medium.com/max/800/1*n8kPcQ0941SZcSL3W33FFQ.jpeg\" alt=\"hapi image\"></img></p>\n<p align=\"center\"><img width=\"296\" height=\"160\" src=\"https://cdn-images-1.medium.com/max/800/1*1jX70x_kpaA1VQSY-rXFvA.png\" alt=\"mongoose image\"></img></p>\n\n> hapi and mongoose are core tools used in rest-hapi\n\nThe other major hurdle rest-hapi attempts to resolve is the never ending decision of whether to choose SQL vs NoSQL for a database. Generally speaking, developers choose SQL/relational databases for the structural advantages they provide, since most projects naturally contain some sort of relational structure within their data, while NoSQL databases are chosen due to their flexibility and scalability. rest-hapi attempts to combine the best of both worlds by using a NoSQL database ([MongoDB](https://www.mongodb.com/)) as its foundation, while also allowing relational structure to easily be defined within the model definitions. When model associations are defined, rest-hapi automatically generates association endpoints alongside the CRUD endpoints.\n\n<p align=\"center\"><img width=\"225\" height=\"225\" src=\"https://cdn-images-1.medium.com/max/800/1*QXX0IucM6Ltr1aY3RjuSkw.png\" alt=\"rest image\"></img></p>\n\n> Standards, anyone?\n\nWhile rest-hapi doesn't provide an end-all solution to API development, I do believe it will be a great tool for developers that want to quickly set up an API to test their latest app idea. Right now the project is still in it's infancy, but eventually I hope it will reach a point where it could be used as a foundation for production level projects. Please take some time to check it out! If you have any feedback, feel free to open an issue in [GitHub](https://github.com/JKHeadley/rest-hapi/issues), or if you want to get in touch you can reach me at [Twitter](https://twitter.com/JKHeadley), [Facebook](https://www.facebook.com/justinkheadley), or [LinkedIn](https://www.linkedin.com/in/justinkheadley), or email me at headley.justin@gmail.com. Thanks for reading!\n\n(Props to [Zach Smith](https://github.com/zacharyclaysmith) for developing the API-generator that spawned rest-hapi, and [Scal.io](http://www.scal.io/) for being awesome)"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "/2018/06/26/How-To-Build-Powerful-APIs-Blazingly-Fast-With-Nodejs",
            "/2017/02/17/The-Problem-With-MongoDB",
            "/2016/11/19/The-Problem-With-APIs"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 3,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {},
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      }
    ]
  },
  "docusaurus-plugin-google-analytics": {},
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-theme-search-algolia": {},
  "docusaurus-plugin-client-redirects": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}